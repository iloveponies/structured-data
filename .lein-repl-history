(use 'midje.repl)
(load-facts :all)
(autotest)
(load-facts :all)
(check-facts)
(use 'midje.repl)
(load-facts :all)
(check-facts)
(load-facts :all)
(check-facts)
(do (check-facts))
(do (load-facts :all) (check-facts))
(Math/abs 2)
(Math/abs 02)
(Math/abs -2)
(do (load-facts :all) (check-facts))
(doc assoc)
(do (load-facts :all) (check-facts))
(doc cond)
(def china {:name "China Mi√©ville", :birth-year 1972})
(:death china)
(boolean (:death china))
(boolean (:name china))
(+ "st" "re)"
(+ "st" "re)
(+ "st" "re")
(concat "st" "re")
(doc cond)
(apply str (concat "(" nil ")"))
(str "ab" " cd")
(do (load-facts :all) (check-facts))
(concat "12 " 3)
(str 3)
(do (load-facts :all) (check-facts))
(= "st" "st")_
(= "st" "st")
(do (load-facts :all) (check-facts))
(0 [1 2 3])
([1 2 3] 0)
(do (load-facts :all) (check-facts))
(boolean 0)
(boolean ())
(boolean '())
(do (load-facts :all) (check-facts))
